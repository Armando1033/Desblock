apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'

android {
    compileSdkVersion 22
    buildToolsVersion '22'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 38
        versionName "3.1.1"
    }

    signingConfigs {
        release {
            storeFile System.getenv().containsKey('ANDROID_KEYSTORE') ? file(System.getenv('ANDROID_KEYSTORE')) : file(".")
            storePassword ""
            keyAlias System.getenv().containsKey('ANDROID_KEYSTORE_ALIAS') ? System.getenv('ANDROID_KEYSTORE_ALIAS').replace("\"", "") : ""
            keyPassword ""
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile project(':libraries:ActiveAndroid')
    compile project(':libraries:PebbleKit')
    compile 'com.google.android.gms:play-services:7.0.0'
    compile 'fr.nicolaspomepuy:discreetapprate:2.0@aar'
    compile 'com.squareup:otto:1.3.5'
    compile 'com.lukekorth:mailable_log:0.1.3'

    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.1'
}


// borrowed from https://www.timroes.de/2014/01/19/using-password-prompts-with-gradle-build-files/
// and https://www.timroes.de/2013/09/22/handling-signing-configs-with-gradle/
gradle.taskGraph.whenReady { taskGraph ->
    // Only execute when we are trying to assemble a release build
    if(taskGraph.hasTask(':pebblelocker:assembleRelease') || taskGraph.hasTask(':pebblelocker:installRelease')) {
        def password = System.console().readPassword("\nPlease enter key passphrase: ")
        if(password.size() <= 0) {
            throw new InvalidUserDataException("You must enter a password to proceed.")
        }

        // Must create String because System.readPassword() returns char[]
        // (and assigning that below fails silently)
        password = new String(password)

        android.signingConfigs.release.storePassword = password
        android.signingConfigs.release.keyPassword = password
    }
}
